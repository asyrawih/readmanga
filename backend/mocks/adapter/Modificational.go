// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Modificational is an autogenerated mock type for the Modificational type
type Modificational[T interface{}, K interface{}] struct {
	mock.Mock
}

// Update provides a mock function with given fields: ctx, data, id
func (_m *Modificational[T, K]) Update(ctx context.Context, data *T, id K) error {
	ret := _m.Called(ctx, data, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *T, K) error); ok {
		r0 = rf(ctx, data, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewModificational creates a new instance of Modificational. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewModificational[T interface{}, K interface{}](t interface {
	mock.TestingT
	Cleanup(func())
}) *Modificational[T, K] {
	mock := &Modificational[T, K]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
