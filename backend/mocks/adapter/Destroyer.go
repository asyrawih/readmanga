// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Destroyer is an autogenerated mock type for the Destroyer type
type Destroyer[ID interface{}] struct {
	mock.Mock
}

// Delete provides a mock function with given fields: ctx, id
func (_m *Destroyer[ID]) Delete(ctx context.Context, id ID) bool {
	ret := _m.Called(ctx, id)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, ID) bool); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewDestroyer creates a new instance of Destroyer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDestroyer[ID interface{}](t interface {
	mock.TestingT
	Cleanup(func())
}) *Destroyer[ID] {
	mock := &Destroyer[ID]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
